{
  "name": "Appview",
  "tagline": "移动端适应框架",
  "body": "# AppView\r\n这是一个基础的移动端适应的样式框架，可以用来快速，简单的搭建移动端H5网页。\r\n框架基于淘宝的移动端解决方案[flexible](https://github.com/amfe/lib-flexible)。\r\n实现了跨移动端的浏览器自适应框架。\r\n\r\n* [首页](http://appview.htmlid.cn/)\r\n* [文档](http://appview.htmlid.cn/)\r\n* [Demo](http://appview.htmlid.cn/demo/)\r\n\r\n## 相关资料\r\nflexible: https://github.com/amfe/lib-flexible\r\n\r\n相关文章请参考[此处](https://github.com/amfe/article/issues/17)\r\n\r\n## 快速上手\r\n引用样式\r\n\r\n```html\r\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../build/base.css\"/>\r\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../build/font.css\"/>\r\n<link type=\"text/css\" rel=\"stylesheet\" href=\"../../build/view.css\"/>\r\n```\r\n\r\n引用脚本\r\n```html\r\n<script src=\"../../build/flexible.js\"></script>\r\n```\r\n\r\nHTML代码\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head lang=\"en\">\r\n    <meta charset=\"utf-8\">\r\n    <meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\r\n    <meta content=\"yes\" name=\"apple-touch-fullscreen\">\r\n    <meta content=\"telephone=no,email=no\" name=\"format-detection\">\r\n    <link rel=\"apple-touch-icon\" href=\"favicon.png\">\r\n    <link rel=\"Shortcut Icon\" href=\"favicon.png\" type=\"image/x-icon\">\r\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"../../build/base.css\"/>\r\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"../../build/font.css\"/>\r\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"../../build/view.css\"/>\r\n    <script src=\"../build/flexible.js\"></script>\r\n    <title></title>\r\n</head>\r\n<body>\r\n    <div class=\"view-list\">\r\n        <div class=\"view-table m-t-xl\">\r\n            <a class=\"view-table-cell\">\r\n                <div>\r\n                    <i class=\"fa fa-search\"></i>\r\n                    <span>相册</span>\r\n                    <i class=\"fa fa-angle-right \"></i>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>\r\n```\r\n\r\n## 不同分辨率下的显示效果\r\n|Galaxy S5|iPhone 5|\r\n|---------|--------|\r\n|![Galaxy S5](http://appview.htmlid.cn/demo/images/wx-w-gs5.png)|![iPhone 5](http://appview.htmlid.cn/demo/images/wx-w-i5.png)|\r\n\r\n|iPhone 6|iPhone 6 plus|\r\n|---------|--------|\r\n|![iPhone 6](http://appview.htmlid.cn/demo/images/wx-w-i6.png)|![iPhone 6 plus](http://appview.htmlid.cn/demo/images/wx-w-i6p.png)|\r\n\r\niPad Mini  \r\n![iPad Mini](http://appview.htmlid.cn/demo/images/wx-w-ipm.png)\r\n\r\n\r\n## 样式(Base)\r\n基本样式库`base.css`定义了移动网页的基本样式，包括去除`body`的`margin`等\r\n\r\n样式包括：\r\n\r\n* 图片自适应\r\n* 图片圆角\r\n* 图片圆形\r\n* 文本对齐\r\n* 字符串截取\r\n* 大小写\r\n* 情境文本颜色\r\n* 情境背景颜色\r\n* padding 规范 \r\n* margin 规范\r\n* 元素居中\r\n* 左右浮动\r\n* 显示和隐藏\r\n* 清除浮动\r\n\r\n## 字体(Font)\r\n`font.css`定义了基本的字体样式\r\n\r\n通过设置样式，可以简单方便的设置文字大小，并兼容移动端显示。\r\n\r\n在iPhone4和iPhone6的Retina屏下面，我们希望看到的文本字号是相同的。也就是说，我们不希望文本在Retina屏幕下变小，\r\n另外，我们希望在大屏手机上看到更多文本，以及，现在绝大多数的字体文件都自带一些点阵尺寸，通常是`16px`和`24px`，所以我们不希望出现`13px`和`15px`这样的奇葩尺寸。\r\n如此一来，就决定了在制作H5的页面中，`rem`并不适合用到段落文本上。所以在Flexible整个适配方案中，考虑文本还是使用`px`作为单位。只不过使用`[data-dpr]`属性来区分不同`dpr`下的文本字号大小。\r\n\r\n```html\r\n<p class=\"text-xs\">10px字体，在有些浏览器有最小字体限制，可能无法正常显示.</p>\r\n<p class=\"text-s\">12px字体，适用于描述性文字.</p>\r\n<p class=\"text-m\">14px字体，默认字体大小.</p>\r\n<p class=\"text-l\">16px字体，稍大.</p>\r\n<p class=\"text-xl\">18px字体，适用于标题.</p>\r\n<p class=\"text-xxl\">24px字体，适用于标题.</p>\r\n```\r\n\r\n我们定义了基本的字体大小`10px`,`12px`,`14px`,`16px`,`18px`,`24px`用于适配常见的网页字体，如果需要特殊的字号，可以自行添加样式如下\r\n\r\n```css\r\n.text-xxl {font-size:24px}\r\n[data-dpr=\"2\"] .text-xxl {font-size:48px}\r\n[data-dpr=\"3\"] .text-xxl {font-size:72px}\r\n```\r\n\r\n## 视图(View)\r\n视图`view.css`是基于基本样式的扩展，定义了部分移动端常用控件，只需要简单的html结构就可以实现原生控件效果，\r\n基本控件包括：\r\n\r\n* 列表\r\n* TabBar\r\n* TitleBar\r\n* TableView\r\n\r\n## 最新版本\r\n1.0.0\r\n\r\n## 依赖库\r\n基于淘宝移动端解决方案flexible，github地址：\r\nhttps://github.com/amfe/lib-flexible\r\n\r\n完整引用举例\r\n    <script src=\"http://g.tbcdn.cn/mtb/lib-flexible/{{version}}/??flexible.js\"></script>\r\n  \r\n## 使用方法\r\n建议对于js做`内联处理`，在所有资源加载之前执行这个js。\r\n\r\n执行这个js后，会在`html`（也就是document.documentElement）上增加一个`data-dpr`属性，以及`font-size`样式。\r\n\r\n之后页面中的元素，都可以用`rem`单位来设置。`html`上的`font-size`就是rem的基准像素。\r\n\r\n## 把视觉稿中的px转换成rem\r\n\r\n首先，目前视觉稿大小分为`640`，`750`以及，`1125`这三种。\r\n\r\n当前方案会把这3类视觉稿分成`100`份来看待（为了以后兼容vh，vw单位）。每一份被称为一个单位a。同时，1rem单位认定为10a。拿750的视觉稿举例：\r\n\r\n    1a = 7.5px\r\n    1rem = 75px\r\n因此，对于视觉稿上的元素的尺寸换算，只需要`原始px值`除以`rem基准px值`即可。例如240px * 120px的元素，最后转换为3.2rem * 1.6rem。\r\n\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}